version: '{branch}-{build}'

init:
  # Create our AppVeyor version
  - ps: $env:commit = $env:appveyor_repo_commit.SubString(0,7)
  - ps: Update-AppveyorBuild -Version ("{0}-{1}-{2}" -f $env:appveyor_repo_branch,$env:appveyor_build_number,$env:commit )

environment:
  VSVER: 14.0
  matrix:
    - MSVC_VERSION: 15
      RUNTIME_LINKAGE: static
      QT_VERSION: 5.10
      QT_LINKAGE: static
      COVERITY_BUILD_CANDIDATE: True
      QTDIR: C:\Qt\5.10.1\mingw53_32
      MGWDIR: C:\Qt\Tools\mingw530_32\bin
      MGWLIBS: libgomp-1.dll
      VCLIBS: VCRUNTIME140.dll MSVCP140.dll

configuration:
  - release
  - debug

install:
  # Set some vars
  - '%QTDIR%\bin\qtenv2.bat'
  - pip install jinja2
  - qmake -v
  - set VCLIBDIR=%WINDIR%\SysWOW64 # Find vclibs
  - set QTDIR
  - if %QTDIR:_64=%==%QTDIR% ( set ARCH=x86 ) else set ARCH=x64
  - if %QTDIR:msvc=%==%QTDIR% g++ --version
  - if %QTDIR:msvc=%==%QTDIR% set make=mingw32-make.exe
  - if %QTDIR:msvc=%==%QTDIR% %make% --version
  - if not %QTDIR:msvc=%==%QTDIR% call "%ProgramFiles(x86)%\Microsoft Visual Studio %VSVER%\VC\vcvarsall.bat" %ARCH%
  - if not %QTDIR:msvc=%==%QTDIR% set make=nmake.exe
  - if not %QTDIR:msvc=%==%QTDIR% %make% /? > nul
  - if %APPVEYOR_REPO_TAG%==true ( set RELEASE_NAME=%APPVEYOR_REPO_TAG_NAME% ) else set RELEASE_NAME=continuous

before_build:
  # Prepare the out-of-source build directory.
  - echo "RELEASE_NAME"
  - echo %RELEASE_NAME%
  - cd %APPVEYOR_BUILD_FOLDER%
  - git submodule init
  - git submodule update
  - mkdir %APPVEYOR_BUILD_FOLDER%-build
  - qmake -o %APPVEYOR_BUILD_FOLDER%-build -r -Wall -Wlogic -Wparser CONFIG+=%CONFIGURATION% %APPVEYOR_BUILD_FOLDER%

build_script:
  # Compile it and check for .exe
  - cd %APPVEYOR_BUILD_FOLDER%-build
  - '%make%'
  - dir /b /s *.exe

after_build:
  # Add a link to the build output within the source directory. This is needed because AppVeyor does
  # not support extracting artifacts from out-of-source build directories. See 'artifacts' below.
  - dir /b /s *.exe
  - mkdir deploy
  - copy %APPVEYOR_BUILD_FOLDER%-build\%CONFIGURATION%\pingviewer.exe deploy\pingviewer.exe
  - windeployqt --qmldir %APPVEYOR_BUILD_FOLDER%/qml --%CONFIGURATION% deploy/pingviewer.exe --verbose=2
  - for %%I in (%VCLIBS%) do copy %VCLIBDIR%\%%I deploy\
  - for %%I in (%MGWLIBS%) do copy %MGWDIR%\%%I deploy\
  - appveyor DownloadFile https://github.com/bluerobotics/stm32flash-code/releases/download/continuous/stm32flash.exe -FileName deploy/stm32flash.exe
  - 7z a -tzip pingviewer_%CONFIGURATION%.zip deploy -r
  - copy %APPVEYOR_BUILD_FOLDER%-build\pingviewer_%CONFIGURATION%.zip %APPVEYOR_BUILD_FOLDER%\pingviewer_%CONFIGURATION%.zip
  - dir /b /s *.zip

artifacts:
  - path: pingviewer_%CONFIGURATION%.zip
    name: PingViewer

deploy:
  - provider: GitHub
    release: $(RELEASE_NAME)
    artifact: PingViewer
    draft: false
    prerelease: true
    auth_token:
      secure: VEF0yQnbTywsc88aRTZH8e1/Z0M7qf2txtidiB43qrSFTvrE/2nAQzGx+eqCBb9p